#=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# Set Enviroment variables for found operating system
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

exec_prefix = @DEFAULT@
CONF	= mkconf/Make.ARCH
CC = @CC@
FC = @F77@
OS = @OS@
DEST = @BINDIR@

all:
	@echo "using $(CC) to compile c stuff ..."
	@echo "Creating SeedStuff for `uname -a` ..."
	@$(MAKE) $(OS)
	@chmod go+rx bin/*/*
	@echo ; echo ; echo "Program binaries in bin/$(OS)"

install: all
	@for f in bin/$(OS)/* ; do install $$f $(DEST) ; done
	
SunOS:
	@[ -d lib/SunOS4.1.x ] || mkdir lib/SunOS4.1.x
	@[ -d bin/SunOS4.1.x ] || mkdir bin/SunOS4.1.x
	@$(MAKE) -f $(CONF) CC=$(CC) FC=$(FC) OS=SunOS4.1.x ARCH=SunOS

Solaris:
	@[ -d lib/Solaris ] || mkdir lib/Solaris
	@[ -d bin/Solaris ] || mkdir bin/Solaris
	@$(MAKE) -f $(CONF) CC=$(CC) FC=$(FC) OS=Solaris ARCH=SunOS

Linux:
	@[ -d lib/Linux ] || mkdir lib/Linux
	@[ -d bin/Linux ] || mkdir bin/Linux
	@$(MAKE) -f $(CONF) CC=$(CC) FC=$(FC) OS=Linux ARCH=Linux

HP-UX:
	@[ -d lib/HP-UX ] || mkdir lib/HP-UX
	@[ -d bin/HP-UX ] || mkdir bin/HP-UX
	@$(MAKE) -f $(CONF) CC=$(CC) FC=$(FC) OS=HP-UX ARCH=HP-UX	

Darwin:
	@[ -d lib/Darwin ] || mkdir lib/Darwin
	@[ -d bin/Darwin ] || mkdir bin/Darwin
	@$(MAKE) -f $(CONF) CC=$(CC) FC=$(FC) OS=Darwin ARCH=macos

FreeBSD:
	@[ -d lib/FreeBSD ] || mkdir lib/FreeBSD
	@[ -d bin/FreeBSD ] || mkdir bin/FreeBSD
	@$(MAKE) -f $(CONF) CC=$(CC) FC=$(FC) OS=FreeBSD ARCH=FreeBSD

clean:
	@$(MAKE) -i clean_out_all

clean_out_all:	clean_utils
	if [ "$(OS)" = "HP-UX" ]; then \
		/bin/rm  lib/HP-UX/*.[ao] bin/HP-UX/* ; \
	fi
	if [ "$(OS)" = "Linux" ] ; then /bin/rm  lib/Linux/*.[caoF]; fi
	if [ "$(OS)" = "Darwin" ] ; then /bin/rm  lib/Darwin/*.[cao]; fi
	if [ "$(OS)" = "SunOS" ] ; then /bin/rm  lib/SunOS4.1.x/*.[ao] ; fi
	if [ "$(OS)" = "Solaris" ] ; then /bin/rm  lib/Solaris/*.[ao] ; fi
	if [ "$(OS)" = "FreeBSD" ] ; then /bin/rm  lib/FreeBSD/*.[cao]; fi

clean_utils:
	if [ -d contrib/utils ] ; then \
		(cd contrib/utils; $(MAKE) distclean) ; \
	fi

pkg:	clean_utils
	@echo "Cleaning out all binary and obj files ..."
	-for i in Linux Solaris SunOS4.1.x Darwin FreeBSD ; do \
	   /bin/rm -f lib/$$i/* bin/$$i/* ; \
	   /bin/rm -rf autom4te.cache config.log config.status ; \
	done
	@echo "Creating a tar distribution ..."
	D=`basename $$PWD` ; (cd ..; tar cvfz /tmp/geofon.tgz $$D)

tar:
	$(MAKE) -i pkg
